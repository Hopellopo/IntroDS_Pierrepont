2 -> c
2L -> d
attribute(c)
attributes(c)
setwd("C:/Users/jloum_000/Desktop/Senior CS")
2 -> c
2L -> d
attributes(c)
v = c(1, 2, 3, 4)
2 -> c
2L -> d
attributes(c)
v = c(1, 2, 3, 4)
v+1
v = c(d)
2 -> c
attributes(c)
v = c(d)
2 -> c
attributes(c)
v = c(x)
2 -> c
attributes(c)
v = c(1, 2, 3, 4)
c(v, "d")
x <- c(4, TRUE)
class(x)
setwd("IntroDS/IntroDS_Pierrepont/Rprog/")
dir
dir()
# Question 11 - 20 of assessment 1
# Question 11
airquality <- read.csv("hw1_data.csv")
head(airquality)
airquality <- read.table("hw1_data.csv", sep = ",")
head(airquality)
airquality <- read.table("hw1_data.csv", sep = ",", header = T)
head(airquality)
airquality <- read.csv("hw1_data.csv")
names(airquality)
airquality[c(1, 2), ]
airquality
dim(airquality)
nrow(airquality)
airquality[152:153, ]
tail(airquality)
tail(airquality, 2)
airquality[47, "Ozone"]
x <- airquality[ , "Ozone"]
Sum(is.na(x))
sum(is.na(x))
mean(x)
x <- x[!is.na(x)]
mean(x)
x <- airquality[ , "Ozone"]
mean(x, na.rm = T)
dataset1 <- subset(dataset1, Ozone > 31 & Temp > 90 & !is.na(Ozone) & !is.na(Temp))
dataset1 <- airquality
dataset1 <- subset(dataset1, Ozone > 31 & Temp > 90 & !is.na(Ozone) & !is.na(Temp))
dataset1
Solar.R <- dataset1[ , 'Solar.R']
mean(Solar.R)
mean(airquality[airquality$Ozone > 31 & airquality$Temp > 90, "Solar.R"], na.rm = T)
mean(airquality[airquality$Month == 6, 'Temp'], na.rm = T)
max(airquality[airquality$Month == 5, 'Ozone'], na.rm = T)
library(swirl)
swirl()
mean(c(2, 4, 5))
# You're about to write your first function! Just like you would assign a value
# to a variable with the assignment operator, you assign functions in the following
# way:
#
# function_name <- function(arg1, arg2){
#	# Manipulate arguments in some way
#	# Return a value
# }
#
# The "variable name" you assign will become the name of your function. arg1 and
# arg2 represent the arguments of your function. You can manipulate the arguments
# you specify within the function. After sourcing the function, you can use the
# function by typing:
#
# function_name(value1, value2)
#
# Below we will create a function called boring_function. This function takes
# the argument `x` as input, and returns the value of x without modifying it.
# Delete the pound sign in front of the x to make the function work! Be sure to
# save this script and type submit() in the console after you make your changes.
boring_function <- function(x) {
x
}
x
boring_function(x)
boring_function("x")
# You're about to write your first function! Just like you would assign a value
# to a variable with the assignment operator, you assign functions in the following
# way:
#
# function_name <- function(arg1, arg2){
#	# Manipulate arguments in some way
#	# Return a value
# }
#
# The "variable name" you assign will become the name of your function. arg1 and
# arg2 represent the arguments of your function. You can manipulate the arguments
# you specify within the function. After sourcing the function, you can use the
# function by typing:
#
# function_name(value1, value2)
#
# Below we will create a function called boring_function. This function takes
# the argument `x` as input, and returns the value of x without modifying it.
# Delete the pound sign in front of the x to make the function work! Be sure to
# save this script and type submit() in the console after you make your changes.
boring_function <- function(x) {
x
}
submit()
# You're about to write your first function! Just like you would assign a value
# to a variable with the assignment operator, you assign functions in the following
# way:
#
# function_name <- function(arg1, arg2){
#	# Manipulate arguments in some way
#	# Return a value
# }
#
# The "variable name" you assign will become the name of your function. arg1 and
# arg2 represent the arguments of your function. You can manipulate the arguments
# you specify within the function. After sourcing the function, you can use the
# function by typing:
#
# function_name(value1, value2)
#
# Below we will create a function called boring_function. This function takes
# the argument `x` as input, and returns the value of x without modifying it.
# Delete the pound sign in front of the x to make the function work! Be sure to
# save this script and type submit() in the console after you make your changes.
boring_function <- function(x) {
x
}
boring_function("Hello World")
submit()
submit()
boring_function("My First Function")
boring_function("My first function")
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
